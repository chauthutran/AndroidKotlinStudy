{
  "name": "wfa",
  "version": "1.0.0",
  "description": "WorkForceApp PWA service worker build",
  "author": "James Chang",
  "scripts": {
    "cssMinTest": "css-minify -f .\\pwa-loc\\css\\style.css",

    "localDev": "del pwa-loc\\workbox-* && node sw_build_pwa-loc.js && xcopy pwa-loc deploy\\pwa-dev /E/H/C/I/Y",
    "localDevTomcat": "del pwa-loc\\workbox-* && node sw_build_pwa-loc.js && xcopy pwa-loc C:\\Work\\tomcat8\\webapps\\pwa-dev /E/H/C/I/Y",
    "todoNote": "We can go with reusing localDev folder?  hard to reuse since we need to delete them..",

    "d_copyDev": "xcopy pwa-loc pwa-dev /E/H/C/I/Y",
    "d_cleanUp": "del /s /q pwa-dev\\*.map && del pwa-dev\\workbox-* && rmdir /s /q pwa-dev\\scss",
    "dBuild": "npm run d_copyDev && npm run d_cleanUp && node sw_build_pwa-dev.js && tar.exe cf pwa-dev.zip pwa-dev && RMDIR /Q /S pwa-dev",

    "t_copyDev": "xcopy pwa-loc pwa-test /E/H/C/I/Y",
    "t_cleanUp": "del /s /q pwa-test\\*.map && del pwa-test\\workbox-* && rmdir /s /q pwa-test\\scss",
    "t_setFiles": "xcopy stageFiles\\test_manifest.json pwa-test\\manifest.json /Y && xcopy stageFiles\\test-icons pwa-test\\images\\icons /E/H/C/I/Y",
    "t_swZipFolder": "node sw_build_pwa-test.js && tar.exe cf pwa-test.zip pwa-test && RMDIR /Q /S pwa-test",
    "tBuild": "npm run t_copyDev && npm run t_cleanUp && npm run t_setFiles && npm run t_swZipFolder",

    "s_copyDev": "xcopy pwa-loc pwa-stage /E/H/C/I/Y",
    "s_cleanUp": "del /s /q pwa-stage\\*.map && del pwa-stage\\workbox-* && rmdir /s /q pwa-stage\\scss",
    "s_setFiles": "xcopy stageFiles\\stage_manifest.json pwa-stage\\manifest.json /Y && xcopy stageFiles\\stage-icons pwa-stage\\images\\icons /E/H/C/I/Y",
    "s_swZipFolder": "node sw_build_pwa-stage.js && tar.exe cf pwa-stage.zip pwa-stage && RMDIR /Q /S pwa-stage",
    "sBuild": "npm run s_copyDev && npm run s_cleanUp && npm run s_setFiles && npm run s_swZipFolder",

    "t_copyDev": "xcopy pwa-loc pwa-train /E/H/C/I/Y",
    "t_cleanUp": "del /s /q pwa-train\\*.map && del pwa-train\\workbox-* && rmdir /s /q pwa-train\\scss",
    "t_setFiles": "xcopy stageFiles\\train_manifest.json pwa-train\\manifest.json /Y && xcopy stageFiles\\train-icons pwa-train\\images\\icons /E/H/C/I/Y",
    "t_swZipFolder": "node sw_build_pwa-train.js && tar.exe cf pwa-train.zip pwa-train && RMDIR /Q /S pwa-train",
    "tBuild": "npm run t_copyDev && npm run t_cleanUp && npm run t_setFiles && npm run t_swZipFolder",

    "w_copyDev": "xcopy pwa-loc wfa /E/H/C/I/Y",
    "w_cleanUp": "del /s /q wfa\\*.map && del wfa\\workbox-* && rmdir /s /q wfa\\scss",
    "w_setFiles": "xcopy stageFiles\\wfa_manifest.json wfa\\manifest.json /Y && xcopy stageFiles\\wfa-icons wfa\\images\\icons /E/H/C/I/Y",
    "w_swZipFolder": "node sw_build-wfa.js && tar.exe cf wfa.zip wfa && RMDIR /Q /S wfa",
    "wBuild": "npm run w_copyDev && npm run w_cleanUp && npm run w_setFiles && npm run w_swZipFolder",

    "minifyJS": "uglifyjs scripts.js --compress --mangle --warn --output scripts.min.js",
    "utest": "karma start",
    "todoScript": "Should use karma start to pass/fail before devBuild & tBuild!!!"
  },
  "dependencies": {
    "css-minify": "^2.0.0",
    "karma": "^5.1.0",
    "karma-chrome-launcher": "^3.1.0",
    "karma-cli": "^2.0.0",
    "karma-coverage": "^2.0.2",
    "karma-qunit": "^4.1.1",
    "karma-requirejs": "^1.1.0",
    "qunit": "^2.10.1",
    "qunitjs": "^2.4.1",
    "requirejs": "1.0.0",
    "uglify-js": "^3.10.1",
    "workbox-webpack-plugin": "^6.3.0",
    "workbox-window": "^6.3.0"
  },
  "devDependencies": {
    "karma": "^5.1.0",
    "karma-chrome-launcher": "^3.1.0",
    "karma-coverage": "^2.0.2",
    "karma-jasmine": "^3.3.1",
    "karma-qunit": "^4.1.1",
    "karma-requirejs": "^1.1.0",
    "qunit": "^2.10.0",
    "qunitjs": "^2.4.1",
    "workbox-build": "^6.3.0"
  }
}
