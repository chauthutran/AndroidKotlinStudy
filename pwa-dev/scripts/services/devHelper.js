// =========================================
// -------------------------------------------------
//     DevHelper
//          - Methods to help debug for developer
//          - Can run on console.customLog and can be turned on /off for seeing scheduled task messages..
//
// -------------------------------------------------

function DevHelper() {};

DevHelper.cwsRenderObj;
DevHelper.INFO;
DevHelper.tempCount = 0;

DevHelper.testRunInterval;
DevHelper.testRunCount = 0;


DevHelper.sampleDataTemplate = 
[
  {
    "_id": "client_{USERNAME}_{SHORTDATE}_{8DIGITS}",
    "date": {
        "updatedOnMdbUTC": "{RECENT_SHORTDATE}T12:32:03",
        "createdOnMdbUTC": "{RECENT_SHORTDATE}T11:26:26"
    },    
    "clientDetails": {
        "firstName": "{FIRSTNAME}",
        "lastName": "{LASTNAME}",
        "phoneNumber": "{10DIGITS}",
        "age": "{AGE}",
        "users": [ "{USERNAME}" ],
        "voucherCode": [ "{8DIGITS}" ],
        "autoGenerated": true
    },
    "clientConsent": {
        "phone": true,
        "tracking": true,
        "service": true,
        "feedback": false
    },    
    "activities": [{
        "id": "{USERNAME}_{SHORTDATE}_{8DIGITS}",
        "date": {
            "createdOnMdbUTC": "{EARLIER_SHORTDATE}T09:31:02.488",
            "createdOnMdbLoc": "{EARLIER_SHORTDATE}T09:31:02.488",
            "capturedUTC": "{EARLIER_SHORTDATE}T09:30:50.000",
            "createdOnDeviceUTC": "{EARLIER_SHORTDATE}T09:30:50.000",
            "capturedLoc": "{EARLIER_SHORTDATE}T18:30:50.000"
        },
        "activeUser": "{USERNAME}",
        "creditedUsers": [
          "{USERNAME}_OTH"
        ],
        "type": "{ACTIVITY_TYPE}",
        "location": {},
        "program": "{PROGRAM}",
        "processing": {
            "created": "{EARLIER_SHORTDATE}T18:30:50.000",
            "status": "{STATUS}",
            "statusRead": false,
            "history": [
                { "status": "submit_wMsg", "dateTime": "{EARLIER_SHORTDATE}T18:30:50.000", "responseCode": 412, "msg": "Client and Voucher were successfully created. We couldn't send the voucher to phone 0777 576 4090.PLease give the voucher code directly to the client. Voucher: 1234" }
            ]
        },
        "transactions": [{
            "type": "c_reg",
            "clientDetails": {
                "firstName": "{FIRSTNAME}",
                "lastName": "{LASTNAME}",
                "phoneNumber": "{10DIGITS}",
                "clientId": "",
                "age": "{AGE}",
                "provisionMethod": "{METHOD}"
            },
            "clientConsent": {                
            }
        }, {
            "type": "v_iss",
            "clientDetails": {
                "voucherCode": "{8DIGITS}"
            }
        }]
    }]
}];


// =======================================

DevHelper.setUp = function( cwsRenderObj )
{
    DevHelper.cwsRenderObj = cwsRenderObj;
};

// =======================================


DevHelper.switchConnectMode = function( connModeStr )
{
    if ( connModeStr === "STABLE" )
    {
        ConnManagerNew.efficiency.wsAvailCheck_Immediate = true;
        ConnManagerNew.efficiency.networkConnOnline_Immediate = false;
    }
    else if ( connModeStr === "ACCESSIBLE" )
    {
        ConnManagerNew.efficiency.wsAvailCheck_Immediate = true;
        ConnManagerNew.efficiency.networkConnOnline_Immediate = true;
        // More settings to ...
    }
};


DevHelper.showClientListData = function()
{
    console.customLog( ClientDataManager.getClientList() );
};

DevHelper.showClientListStr = function()
{
    console.customLog( JSON.stringify( { 'list': ClientDataManager.getClientList() } ) );
};


DevHelper.showActivityListData = function()
{
    console.customLog( ActivityDataManager.getActivityList() );
};

DevHelper.showActivityListStr = function()
{
    console.customLog( JSON.stringify( { 'list': ActivityDataManager.getActivityList() } ) );
};

DevHelper.removeSampleData = function()
{
    ClientDataManager.removeSampleData( function( removedCount ) 
    {
        console.customLog( 'DevHelper.removeSampleData Done and saved to IndexedDB.  Removed Count: ' + removedCount );
        DevHelper.cwsRenderObj.renderArea( DevHelper.cwsRenderObj.areaList[ 0 ].id );
    });
};

// create load data method..
DevHelper.loadSampleData = function( icount ) 
{
    ClientDataManager.loadSampleData( icount, DevHelper.sampleDataTemplate, function() {
        console.customLog( 'DevHelper.loadSampleData Done and saved to IndexedDB' );
        DevHelper.cwsRenderObj.renderArea( DevHelper.cwsRenderObj.areaList[ 0 ].id );
    });
};


DevHelper.showActivityCardConfigs = function()
{
    console.customLog( ConfigManager.getConfigJson().settings.redeemDefs );
};

DevHelper.showINFO = function()
{
    console.customLog( DevHelper.INFO );
};

DevHelper.setINFO_ForConsoleDisplay = function( INFO )
{
    DevHelper.INFO = INFO;
};

DevHelper.checkNewAppFile = function()
{
    if ( DevHelper.cwsRenderObj ) DevHelper.cwsRenderObj.swManagerObj.checkNewAppFile();
}

// =======================================

// Not yet implemented
DevHelper.setDebugFlag = function() { };

// Not yet implemented
DevHelper.setScheduleMsgFlag = function() { };

// ======================================
// === TESTING ONES BELOW ================

DevHelper.TestRequestSend = function( url )
{
    try
    {
        var payloadJson = {
            "activity": { 
                "activeUser": "james"
            }
        };

        var loadingTag = undefined;

        WsCallManager.requestPostDws( url, payloadJson, loadingTag, function( success, mongoClientsJson ) {

            console.customLog( success, mongoClientsJson );
        });
    }
    catch( errMsg )
    {
        console.customLog( 'Error in DevHelper.TestRequestSend - ' + errMsg );
    }
};

DevHelper.testRun2 = function()
{
    var dest = { 'a1': [ { 'name': 'james' }, { 'name': 'mark' } ],
        'a2': 'james',
        'o1': { 'name': 'james', 'child': { 'age': 12, 'weight': 30 } }
          };
    var obj = { 'a1': [ { 'name': 'james1' }, { 'name': 'mark1' } ],
          'a2': 'mark',
          'a3': 'mark2',
          'o1': { 'name': 'mark', 'child': { 'age': 20, 'height': '23' }, 'hobby': 'fly' }
          };
    Util.mergeDeep( dest, obj );

    console.customLog( dest );
};

DevHelper.statPeriodOptions = function()
{
	var dateGroups = [ { name: "Last 24 hours", term: "", hours: 24, created: 0 },
			{ name: "Last 3 days", term: "", hours: 72 , created: 0 },
			{ name: "Last 7 days", term: "", hours: 168, created: 0 },
			{ name: "Last 30 days", term: "", hours: 720, created: 0 },
			{ name: "Last 3 months", term: "", hours: 2160, created: 0 },
            { name: "Last 6 months", term: "", hours: 4320, created: 0 } ];

    return dateGroups;

};

DevHelper.sampleDataList_Static = 
[
  {
    "_id": "5e8af6d6f39ff8047ee4f3e5",
    "date": { // MANDATORY?
        "updatedOnMdbUTC": "2020-06-18T12:32:03", // MANDATORY?
        "createdOnMdbUTC": "2020-06-18T11:26:26" // MANDATORY?
    },    
    "clientDetails": {
        "firstName": "James",
        "lastName": "Chang",
        "phoneNumber": "6543222212",
        "age": "14",
        "users": [ "LA_TEST_IPC" ],
        "voucherCode": [ "22223333" ]
    },
    "clientConsent": {
        "phone": true, // MANDATORY?
        "tracking": true,
        "service": true,
        "feedback": false
    },    
    "activities": [{
        "id": "LA_TEST_PROV_20200406_093052500",
        "date": {
            "createdOnMdbUTC": "2020-04-06T09:31:02.488",
            "createdOnMdbLoc": "2020-04-06T09:31:02.488",

            "capturedUTC": "2020-04-06T09:30:50.000",
            "createdOnDeviceUTC": "2020-04-06T09:30:50.000",
            "capturedLoc": "2020-04-06T18:30:50.000"
        },
        "activeUser": "LA_TEST_IPC",
        "creditedUsers": [
          "LA_TEST_OTH"
        ],
        "type": "eVoucher",
        "location": {},
        "program": "fpl",
        //"activityType": "eVoucher",
        "processing": {
            "created": "2020-04-06T18:30:50.000",
            "status": "submit_wMsg",
            "statusRead": false,
            "history": [
                { "status": "submit_wMsg", "dateTime": "2020-04-06T18:30:50.000", "responseCode": 412, "msg": "Client and Voucher were successfully created. We couldn't send the voucher to phone 0777 576 4090.PLease give the voucher code directly to the client. Voucher: 1234" }
            ]
        },
        "transactions": [{
            "type": "c_reg",
            "clientDetails": {
                "firstName": "James",
                "lastName": "Chang",
                "phoneNumber": "6543222212",
                "clientId": "",
                "age": "14",
                "provisionMethod": "Pills"
            },
            "clientConsent": {                
            }
        }, {
            "type": "v_iss",
            "clientDetails": {
                "voucherCode": "22223333"
            }
        }]
    }]
}];


// =========================

DevHelper.testRunStart = function()
{
    DevHelper.testRunInterval = setInterval( function() {
        DevHelper.testRunCount++;
        console.customLog( 'count: ' + DevHelper.testRunCount + ', time: ' + new Date().toString() );
    }, 2000 );
};

DevHelper.testRunStop = function()
{
    clearInterval( DevHelper.testRunInterval );
};

